# .github/workflows/deploy.yml

name: Build and Deploy to Azure Web App

on:
  push:
    branches: [ "main" ] # Trigger the workflow on push to the main branch
  workflow_dispatch: # Allow manual triggering

env:
  IMAGE_NAME: my-app # The name of your docker image

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout the repository code
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v3

      # 2. Log in to Azure
      - name: 'Login to Azure'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 3. Log in to the Azure Container Registry
      - name: 'Login to ACR'
        uses: azure/docker-login@v1
        with:
              login-server: ${{ secrets.ACR_NAME }}.azurecr.io
              # Explicitly provide the Service Principal credentials from the Azure login step
              username: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
              password: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}

      # 4. Build and push the Docker image
      - name: 'Build and push Docker image'
        run: |
          docker build ./app -t ${{ secrets.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}

      # 5. Deploy the image to Azure Web App
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.WEB_APP_NAME }}
          resource-group-name: ${{ secrets.RESOURCE_GROUP_NAME }}
          images: '${{ secrets.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}'

      # (Optional) Log out of Azure
      - name: 'Logout of Azure'
        run: |
          az logout
          az cache purge
          az account clear